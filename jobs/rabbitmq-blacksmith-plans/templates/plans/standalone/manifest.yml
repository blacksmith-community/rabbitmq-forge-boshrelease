---
meta:
  size: default
  username: (( vault $CREDENTIALS "/rabbitmq/system:username" ))
  password: (( vault $CREDENTIALS "/rabbitmq/system:password" ))

  environment: (( params.env ))

  cf:
    exodus_path: (( concat "secret/exodus/" params.env "/cf" ))
    deployment_name: (( concat meta.environment "-cf" ))
    system_domain: (( vault meta.cf.exodus_path ":system_domain" ))
    api_url:    (( concat "https://api." meta.cf.system_domain ))
    username:   (( vault meta.cf.exodus_path ":admin_username" ))
    password:   (( vault meta.cf.exodus_path ":admin_password" ))


features:
  use_dns_addresses: true

releases:
  - { name: rabbitmq-forge, version: latest }

  - name: loggregator-agent
    version: 6.3.3
    url: https://bosh.io/d/github.com/cloudfoundry/loggregator-agent-release?v=6.3.3
    sha1: e8386f41e967cc609a3e9a1d6ecf674c3c903fb3
  
  - name: rabbitmq-metrics-emitter
    version: 0.4.1
    url:     https://github.com/starkandwayne/rabbitmq-metrics-emitter-release/releases/download/v0.4.1/rabbitmq-metrics-emitter-0.4.1.tgz
    sha1:    05afc6f3559f45e0696c6a3760242045640e0df8

stemcells:
- alias: default
  os: ubuntu-bionic
  version: latest

update:
  canaries: 1
  max_in_flight: 10
  canary_watch_time: 1000-30000
  update_watch_time: 1000-30000

instance_groups:
  - name: standalone
    instances: 1
    azs: [z1]
    networks: [name: (( grab meta.net || "rabbitmq-services" ))]
    stemcell: default

    vm_type: (( grab meta.size ))

    jobs:
      - name:    rabbitmq
        release: rabbitmq-forge
        properties:
          rabbitmq:
            default:
              user: rabbit
              password: (( grab meta.password ))
            admin:
              user: (( grab meta.username ))
              pass: (( grab meta.password ))
            tls:
              enabled: (( grab meta.rabbitmq.tls.enabled || false ))
              dual-mode: (( grab meta.rabbitmq.tls.dual-mode || false ))
              ca: (( grab meta.rabbitmq.tls.ca || "" ))
              crt: (( grab meta.rabbitmq.tls.crt || "" ))
              key: (( grab meta.rabbitmq.tls.key || "" ))

        provides:
          rabbitmq-servers:
            as: rabbitmq-servers
            ip_addresses: false
        consumes:
          rabbitmq-servers:
            from: rabbitmq-servers
            ip_addresses: false

      - name: loggregator_agent
        release: loggregator-agent
        consumes:
          doppler:
            from: doppler
            deployment: (( grab meta.cf.deployment_name ))
        properties:
          loggregator:
            tls:
              ca_cert: (( vault meta.cf.exodus_path ":loggregator_ca" ))
              agent:
                cert: (( vault meta.cf.exodus_path ":loggregator_tls_agent_cert" ))
                key: (( vault meta.cf.exodus_path ":loggregator_tls_agent_key" ))
          metrics:
            server_name: (( concat genesis.env "-rabbitmq-metrics-emitter" ))
            ca_cert: (( vault meta.vault "/loggregator-agent/certs/ca:certificate" ))
            cert:    (( vault meta.vault "/loggregator-agent/certs/metrics:certificate" ))
            key:     (( vault meta.vault "/loggregator-agent/certs/metrics:key" ))

      - name: rabbitmq-metrics-emitter
        release: rabbitmq-metrics-emitter
        properties:
          rabbitmq_metrics_emitter:
            cloud_foundry:
              api:    (( grab meta.cf.api_url ))
              skip_ssl_validation: (( grab params.cf_skip_ssl_validation ))
              username:   (( vault meta.cf.exodus_path ":admin_username" ))
              password:   (( vault meta.cf.exodus_path ":admin_password" ))
            rmq_management:
              endpoint: (( concat meta.mgmt_scheme "://" params.mgmt_domain ":" meta.mgmt_port "/api" ))
              user: management
              password: (( vault meta.vault "/rabbitmq/admin/management:password" ))
            loggregator:
              tls:
                cert: (( vault meta.cf.exodus_path ":loggregator_tls_agent_cert" ))
                key: (( vault meta.cf.exodus_path ":loggregator_tls_agent_key" ))
                ca_cert: (( vault meta.cf.exodus_path ":loggregator_ca" ))
