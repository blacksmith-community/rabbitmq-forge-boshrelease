---
meta:
  size: default
  username: (( vault $CREDENTIALS "/rabbitmq/system:username" ))
  password: (( vault $CREDENTIALS "/rabbitmq/system:password" ))

  environment: <%= p('environment') %>

  cf:
    exodus_path: <%= p('cf.exodus_path') %>
    deployment_name: <%= p('cf.deployment_name') %>
    system_domain: <%= p('cf.system_domain') %>
    api_url:    <%= p('cf.api_url') %>
    username:   <%= p('cf.username') %>
    password:   <%= p('cf.password') %>
  
  mgmt_port:   15671
  mgmt_scheme: https


features:
  use_dns_addresses: true

releases:
  - { name: rabbitmq-forge, version: latest }

  - name: loggregator-agent
    version: 6.3.3
    url: https://bosh.io/d/github.com/cloudfoundry/loggregator-agent-release?v=6.3.3
    sha1: e8386f41e967cc609a3e9a1d6ecf674c3c903fb3
  
  - name: rabbitmq-metrics-emitter
    version: 0.4.1
    url:     https://github.com/starkandwayne/rabbitmq-metrics-emitter-release/releases/download/v0.4.1/rabbitmq-metrics-emitter-0.4.1.tgz
    sha1:    05afc6f3559f45e0696c6a3760242045640e0df8

stemcells:
- alias: default
  os: ubuntu-bionic
  version: latest

update:
  canaries: 1
  max_in_flight: 10
  canary_watch_time: 1000-30000
  update_watch_time: 1000-30000

instance_groups:
  - name: standalone
    instances: 1
    azs: [z1]
    networks: [name: (( grab meta.net || "rabbitmq-services" ))]
    stemcell: default

    vm_type: (( grab meta.size ))

    jobs:
      - name:    rabbitmq
        release: rabbitmq-forge
        properties:
          rabbitmq:
            default:
              user: rabbit
              password: (( grab meta.password ))
            admin:
              user: (( grab meta.username ))
              pass: (( grab meta.password ))
            tls:
              enabled: (( grab meta.rabbitmq.tls.enabled || false ))
              dual-mode: (( grab meta.rabbitmq.tls.dual-mode || false ))
              ca: (( grab meta.rabbitmq.tls.ca || "" ))
              crt: (( grab meta.rabbitmq.tls.crt || "" ))
              key: (( grab meta.rabbitmq.tls.key || "" ))

        provides:
          rabbitmq-servers:
            as: rabbitmq-servers
            ip_addresses: false
        consumes:
          rabbitmq-servers:
            from: rabbitmq-servers
            ip_addresses: false

      - name: loggregator_agent
        release: loggregator-agent
        consumes:
          doppler:
            from: doppler
            deployment: (( grab meta.cf.deployment_name ))
        properties:
          loggregator:
            tls:
              ca_cert:  <%= p('loggregator.tls.ca_cert') %>
              agent:
                cert: <%= p('loggregator.tls.agent.cert') %>
                key: <%= p('loggregator.tls.agent.key') %>
          metrics:
            server_name: (( concat meta.environment "-rabbitmq-metrics-emitter" ))
            ca_cert: <%= p('metrics.ca_cert') %>
            cert:    <%= p('metrics.cert') %>
            key:     <%= p('metrics.key') %>

      - name: rabbitmq-metrics-emitter
        release: rabbitmq-metrics-emitter
        properties:
          rabbitmq_metrics_emitter:
            cloud_foundry:
              api:    (( grab meta.cf.api_url ))
              skip_ssl_validation: <%= p('rabbitmq_metrics_emitter.cloud_foundry.skip_ssl_validation') %>
              username: <%= p('rabbitmq_metrics_emitter.cloud_foundry.username') %>
              password: <%= p('rabbitmq_metrics_emitter.cloud_foundry.password') %>
            rmq_management:
              endpoint: (( concat meta.mgmt_scheme "://" jobs.standalone/0.ips[0] ":" meta.mgmt_port "/api" ))
              user: (( grab meta.username ))
              password: (( grab meta.password ))
            loggregator:
              tls:
                cert: <%= p('loggregator.tls.ca_cert') %>
                key: <%= p('loggregator.tls.ca_cert.agent.cert') %>
                ca_cert: <%= p('loggregator.tls.ca_cert.agent.key') %>
