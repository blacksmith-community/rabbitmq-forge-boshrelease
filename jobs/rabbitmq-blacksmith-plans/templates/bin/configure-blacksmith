#!/bin/bash

set -eu

PLANSRC=/var/vcap/jobs/rabbitmq-blacksmith-plans/plans
SVCROOT=/var/vcap/data/blacksmith/rabbitmq-forge/services

rm -rf ${SVCROOT}
mkdir -p ${SVCROOT}
cp ${PLANSRC}/service.yml ${SVCROOT} # Copy the service definition stubs

<% p("plans").each do |id, plan| -%>
################################################################################
# RabbitMQ Plan <% plan["name"].tr("_","-") %>/<%= id %>
################################################################################
PLANROOT="$SVCROOT/<%= id %>"
PLANTYPE="<%= plan["type"] || 'standalone' %>"

mkdir -p ${PLANROOT}
cat > ${PLANROOT}/plan.yml <<EOF
---
id: <%= id %>
name: <%= plan["name"].tr("_","-") || id %> # NOTE: DNS Requires - not _
limit: <%= plan["limit"] || 0 %>
description: |+
  <%= plan["description"] || 'no description provided' %>
EOF

for file in init credentials.yml manifest.yml
do cp ${PLANSRC}/${PLANTYPE}/${file} ${PLANROOT}/
done

chmod 0755 ${PLANROOT}/init

cat > ${PLANROOT}/params.yml <<EOF
---
# auto-generated by rabbitmq-blacksmith-plans
# for plan-id <%= id %> (<%= plan["name"].tr("_","-") || id %>)

meta:
  size: <%= plan["vm_type"] || "default" %>
  net:  <%= plan["network"] || "rabbitmq-service" %>
  instances: <%= (plan["type"] == "cluster") ? [3, plan["instances"].to_i].max : 1 %>
  azs:
<% (plan["azs"].nil? ? p("azs") : plan["azs"]).each do |az| -%>
    - <%= az %>
<% end -%>

<% unless plan["persistent_disk_type"].nil? -%>
  disk_config: 
    persistent_disk_type: <%= plan["persistent_disk_type"] %>
<% else -%>
<% if plan["persist"] -%>
  persistent: true # TODO: this value is currently ignored and persistence is enabled by default.
<% if plan["disk_type"] -%>
  disk_config:
    persistent_disk_type: <%= plan["disk_type"] %>
<% else -%>
  disk_config:
    persistent_disk: <%= plan["disk_size"] || 1_024 %>
<% end -%>
<% else -%>
  persistent: false # TODO: this value is currently ignored and persistence is enabled by default.
<% end -%>
<% end -%>
<% if p('rabbitmq.tls.enabled') == true -%> 
  rabbitmq:
    tls:
      enabled: true
      ca:  (( file "/var/vcap/jobs/rabbitmq-blacksmith-plans/tls/rabbitmq.ca" ))
      key: (( file "/var/vcap/jobs/rabbitmq-blacksmith-plans/tls/rabbitmq.key" ))
      crt: (( file "/var/vcap/jobs/rabbitmq-blacksmith-plans/tls/rabbitmq.crt" ))

<% if p('rabbitmq.tls.dual-mode') == true -%> 
      dual-mode: true
<% end -%>
<% end -%>

EOF
<% end -%>

