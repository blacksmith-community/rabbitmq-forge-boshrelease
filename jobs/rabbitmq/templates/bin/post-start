#!/bin/bash

set -eu

source /var/vcap/jobs/rabbitmq/env

create_admin_user() {
  rabbitmqctl add_user "$RABBITMQ_ADMIN_USER" "$RABBITMQ_ADMIN_PASS"
}

set_admin_user_role() {
  rabbitmqctl set_user_tags "$RABBITMQ_ADMIN_USER" "administrator"
}

reset_admin_user_pass() {
  rabbitmqctl change_password "$RABBITMQ_ADMIN_USER" "$RABBITMQ_ADMIN_PASS"
}

authenticate_user() {
  rabbitmqctl authenticate_user "${RABBITMQ_ADMIN_USER}" "${RABBITMQ_ADMIN_PASS}"
}

set_admin_vhost_permissions() {
  [[ $RABBITMQ_VHOST == "/" ]] || rabbitmqctl add_vhost "${RABBITMQ_VHOST}"
  rabbitmqctl set_permissions -p "${RABBITMQ_VHOST:-/}" "$RABBITMQ_ADMIN_USER" \
    "${RABBITMQ_VHOST_CONF-.*}" "${RABBITMQ_VHOST_WRITE-.*}" "${RABBITMQ_VHOST_READ-.*}"
}

create_monitoring_user() {
  rabbitmqctl add_user "$RABBITMQ_MONITORING_USER" "$RABBITMQ_MONITORING_PASS"
}

set_monitoring_user_role() {
  rabbitmqctl set_user_tags "$RABBITMQ_MONITORING_USER" "monitoring"
}

reset_monitoring_user_pass() {
  rabbitmqctl change_password "$RABBITMQ_MONITORING_USER" "$RABBITMQ_MONITORING_PASS"
}

authenticate_monitoring_user() {
  rabbitmqctl authenticate_user "${RABBITMQ_MONITORING_USER}" "${RABBITMQ_MONITORING_PASS}"
}

set_monitoring_vhost_permissions() {
  rabbitmqctl set_permissions -p "${RABBITMQ_VHOST:-/}" "$RABBITMQ_MONITORING_USER" \
    "${RABBITMQ_VHOST_CONF-^$}" "${RABBITMQ_VHOST_WRITE-^$}" "${RABBITMQ_VHOST_READ-.*}"
}

create_app_user() {
  rabbitmqctl add_user "$RABBITMQ_APP_USER" "$RABBITMQ_APP_PASS"
}

set_app_user_role() {
  rabbitmqctl set_user_tags "$RABBITMQ_APP_USER" "management policymaker"
}

reset_app_user_pass() {
  rabbitmqctl change_password "$RABBITMQ_APP_USER" "$RABBITMQ_APP_PASS"
}

authenticate_app_user() {
  rabbitmqctl authenticate_user "${RABBITMQ_APP_USER}" "${RABBITMQ_APP_PASS}"
}

authenticate_guest_user() {
  rabbitmqctl authenticate_user guest guest
}

set_app_vhost_permissions() {
  rabbitmqctl set_permissions -p "${RABBITMQ_VHOST:-/}" "$RABBITMQ_APP_USER" \
    "${RABBITMQ_VHOST_CONF-.*}" "${RABBITMQ_VHOST_WRITE-.*}" "${RABBITMQ_VHOST_READ-.*}"
}

wait_for_rabbitmq_startup() {
  rabbitmqctl eval -t "${RABBITMQ_EVAL_TIMEOUT}" 'rabbit:await_startup().'
}

remove_guest_user() {
  rabbitmqctl delete_user guest
}

wait_for_rabbitmq_startup

authenticate_user || (
  create_admin_user || reset_admin_user_pass
  authenticate_user
)
set_admin_user_role
set_admin_vhost_permissions

authenticate_monitoring_user || (
  create_monitoring_user || reset_monitoring_user_pass
  authenticate_monitoring_user
)

set_monitoring_user_role
set_monitoring_vhost_permissions

authenticate_app_user || (
  create_app_user || reset_app_user_pass
  authenticate_app_user
)

set_app_user_role
set_app_vhost_permissions

if authenticate_guest_user; then
  remove_guest_user
fi

exit 0
