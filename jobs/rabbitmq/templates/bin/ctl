#!/bin/bash

set -e # exit immediately if a simple command exits with a non-zero status
set -u # report the usage of uninitialized variables

JOBS_PATH=/var/vcap/jobs/rabbitmq
# Setup env vars and folders for the webapp_ctl script
source ${JOBS_PATH}/helpers/ctl_setup.sh rabbitmq

# NOTE: The env vars below should be in rabbitmq-env.conf:
# TODO: Figure out how to make rabbitmq load ^^^ from the job config/ path
export RABBITMQ_HOME=${JOBS_PATH}
export RABBITMQ_CONFIG_FILE=$RABBITMQ_HOME/config/rabbitmq
export RABBITMQ_NODENAME="<%= spec.id %>" # .<%= spec.name %>.blacksmith.<%= spec.deployment %>.bosh
export RABBITMQ_USE_LONGNAME="true"
export RABBITMQ_LOG_BASE=/var/vcap/sys/log/rabbitmq
export RABBITMQ_MNESIA_BASE=/var/vcap/store/rabbitmq
export RABBITMQ_PID_FILE=$PIDFILE
export ERL_INETRC=/var/vcap/jobs/rabbitmq/config/erl_inetrc

case $1 in
  (start)
    # We cannot use rabbitmqctl to check the version before the service starts so pulling from the app source
    grep vsn /var/vcap/packages/*/ebin/rabbit.app | 
      sed -e 's/.*vsn,."\([^ ]*\)".*/\1/' >/var/vcap/store/rabbitmq/RABBITMQ_VERSION

    erl -noshell -eval 'erlang:display(erlang:system_info(system_version))'\
      -eval 'init:stop()' >/var/vcap/store/rabbitmq/ERLANG_VERSION_FULL

    chown vcap:vcap /var/vcap/store/rabbitmq/RABBITMQ_VERSION \
      /var/vcap/store/rabbitmq/ERLANG_VERSION_FULL

    <% if p('management') -%>
    rabbitmq-plugins enable --offline rabbitmq_management >>$LOG_DIR/$JOB_NAME.log
    <% end %>

    exec chpst -u vcap:vcap rabbitmq-server >>$LOG_DIR/$JOB_NAME.log 2>&1
    ;;
  (stop)
    rabbitmqctl stop
    ;;
  (*)
    echo "Usage: rabbitmq_ctl {start|stop}"
    ;;
esac

exit 0
