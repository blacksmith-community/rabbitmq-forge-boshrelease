#!/bin/bash
set -eu

source /var/vcap/jobs/rabbitmq/env # RabbitMQ Env Vars

case $1 in
  (start)
    # We cannot use rabbitmqctl to check the version before the service starts so pulling from the app source
    grep vsn /var/vcap/packages/rabbitmq/plugins/*/ebin/rabbit.app | 
      sed -e 's/.*vsn,."\([^ ]*\)".*/\1/' >/var/vcap/store/rabbitmq/RABBITMQ_VERSION

    erl -noshell -eval 'erlang:display(erlang:system_info(system_version))'\
      -eval 'init:stop()' >/var/vcap/store/rabbitmq/ERLANG_VERSION_FULL

    chown vcap:vcap /var/vcap/store/rabbitmq/RABBITMQ_VERSION \
      /var/vcap/store/rabbitmq/ERLANG_VERSION_FULL

    PLUGINS=""
    <% if p('management') -%>
    PLUGINS="rabbitmq_management"
    <% end -%>

    <% if p('plugins') do |additional_plugins| %>
    # Add additional plugins specified in params
    PLUGINS="${PLUGINS} <%= additional_plugins.join(' ') %>"
    <% end -%>

    # Enable additional plugins specified in params
    if [[ ! -z "$PLUGINS" ]]; then
      echo "Enabling plugins: $PLUGINS" >>$LOG_DIR/rabbitmq.log 2>&1
      rabbitmq-plugins enable --offline $PLUGINS >>$LOG_DIR/rabbitmq.log 2>&1
    else
      echo "No plugins specified to enable" >>$LOG_DIR/rabbitmq.log 2>&1
    fi

    exec chpst -u vcap:vcap rabbitmq-server >>$LOG_DIR/rabbitmq.log 2>&1
    ;;
  (stop)
    rabbitmqctl stop
    ;;
  (*)
    echo "Usage: rabbitmq_ctl {start|stop}"
    ;;
esac

exit 0
